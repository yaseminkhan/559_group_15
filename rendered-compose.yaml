volumes:
  kafka_data:
  tailscale-var-lib:

networks:
  my_network:
    driver: overlay
    attachable: true

services:
  kafka:
    image: apache/kafka:latest
    networks:
      - my_network
    volumes:
      - kafka_data:/bitnami/kafka
    ports:
      - "9092:9092"  # Broker listener for producers/consumers
      - "19092:19092"  # Controller listener (KRaft mode)
    environment:
      KAFKA_ENABLE_KRAFT: "true"
      KAFKA_NODE_ID: "1"
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT"
      KAFKA_LISTENERS: "PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:19092"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://100.87.55.102:9092"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@100.87.55.102:19092"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: "0"
      KAFKA_LOG_RETENTION_HOURS: "1"
      KAFKA_LOG_CLEANUP_POLICY: "delete"
    deploy:
      placement:
        constraints:
          - node.labels.role == mich

  connection_coordinator:
    image: connection_coordinator
    build:
      context: ./backend
    hostname: connection_coordinator
    ports:
      - "9999:9999"
    environment:
      PRIMARY_SERVER_IP: 100.87.55.102
      COORDINATOR_IP: 100.87.55.102
    command: >
      mvn exec:java -Dexec.mainClass="com.server.ConnectionCoordinator"
    networks:
      - my_network
    deploy:
      placement:
        constraints:
          - node.labels.role == mich

  primary_server:
    image: server
    build:
      context: ./backend
    hostname: primary_server
    ports:
      - "8887:8887"
      - "5001:5001"
      - "5002:5002"
      - "5003:5003"
    environment:
      TAILSCALE_IP: 100.87.55.102
      KAFKA_BOOTSTRAP_SERVERS: 100.87.55.102:9092
      BACKUP_SERVER_1_IP: 100.76.248.111
      BACKUP_SERVER_2_IP: 100.93.26.78
      BACKUP_SERVER_3_IP: 100.76.248.111
      PRIMARY_SERVER_IP: 100.87.55.102
      COORDINATOR_IP: 100.87.55.102
    command: >
      sh -c "/wait-for-backups.sh && mvn exec:java -Dexec.mainClass='com.server.WebServer' -Dexec.args='8887 5001 100.76.248.111:6001,100.93.26.78:7001,100.76.248.111:4001 true'"
    networks:
      - my_network
    deploy:
      placement:
        constraints:
          - node.labels.role == mich

  backup_server_1:
    image: server
    build:
      context: ./backend
    hostname: backup_server_1
    ports:
      - "8888:8888"
      - "6001:6001"
      - "6002:6002"
      - "6003:6003"
    environment:
      TAILSCALE_IP: 100.76.248.111
      KAFKA_BOOTSTRAP_SERVERS: 100.87.55.102:9092
      COORDINATOR_IP: 100.87.55.102
      BACKUP_SERVER_1_IP: 100.76.248.111
      BACKUP_SERVER_2_IP: 100.93.26.78
      BACKUP_SERVER_3_IP: 100.76.248.111
      PRIMARY_SERVER_IP: 100.87.55.102
    command: >
      sh -c "/wait-for-kafka.sh && mvn exec:java -Dexec.mainClass='com.server.WebServer' -Dexec.args='8888 6001 100.87.55.102:5001,100.93.26.78:7001,100.76.248.111:4001 false'"
    networks:
      - my_network
    deploy:
      placement:
        constraints:
          - node.labels.role == yas

  backup_server_2:
    image: server
    build:
      context: ./backend
    hostname: backup_server_2
    ports:
      - "8889:8889"
      - "7001:7001"
      - "7002:7002"
      - "7003:7003"
    environment:
      TAILSCALE_IP: 100.93.26.78
      KAFKA_BOOTSTRAP_SERVERS: 100.87.55.102:9092
      COORDINATOR_IP: 100.87.55.102
      BACKUP_SERVER_1_IP: 100.76.248.111
      BACKUP_SERVER_2_IP: 100.93.26.78
      BACKUP_SERVER_3_IP: 100.76.248.111
      PRIMARY_SERVER_IP: 100.87.55.102
    command: >
      sh -c "/wait-for-kafka.sh && mvn exec:java -Dexec.mainClass='com.server.WebServer' -Dexec.args='8889 7001 100.87.55.102:5001,100.76.248.111:6001,100.76.248.111:4001 false'"
    networks:
      - my_network
    deploy:
      placement:
        constraints:
          - node.labels.role == manv

  backup_server_3:
    image: server
    build:
      context: ./backend
    hostname: backup_server_3
    ports:
      - "8890:8890"
      - "4001:4001"
      - "4002:4002"
      - "4003:4003"
    environment:
      TAILSCALE_IP: 100.76.248.111
      KAFKA_BOOTSTRAP_SERVERS: 100.87.55.102:9092
      COORDINATOR_IP: 100.87.55.102
      BACKUP_SERVER_1_IP: 100.76.248.111
      BACKUP_SERVER_2_IP: 100.93.26.78
      BACKUP_SERVER_3_IP: 100.76.248.111
      PRIMARY_SERVER_IP: 100.87.55.102
    command: >
      sh -c "/wait-for-kafka.sh && mvn exec:java -Dexec.mainClass='com.server.WebServer' -Dexec.args='8890 4001 100.87.55.102:5001,100.76.248.111:6001,100.93.26.78:7001 false'"
    networks:
      - my_network
    deploy:
      placement:
        constraints:
          - node.labels.role == yas